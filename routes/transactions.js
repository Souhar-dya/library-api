const express = require('express');
const Transaction = require('../models/Transaction');
const Book = require('../models/Book');
const router = express.Router();

// Issue a book
router.post('/issue', async (req, res) => {
  const { bookName, userId, issueDate } = req.body;

  const transaction = new Transaction({
    bookName,
    userId,
    issueDate,
    returnDate: null,
    rent: 0
  });

  await transaction.save();
  res.json(transaction);
});

// Return a book and calculate rent
router.post('/return', async (req, res) => {
  const { bookName, userId, returnDate } = req.body;
  const transaction = await Transaction.findOne({ bookName, userId, returnDate: null });

  if (!transaction) return res.status(404).json({ message: 'Transaction not found' });

  const book = await Book.findOne({ bookName });
  const daysRented = (new Date(returnDate) - new Date(transaction.issueDate)) / (1000 * 3600 * 24);
  const rent = book.rentPerDay * daysRented;

  transaction.returnDate = returnDate;
  transaction.rent = rent;
  await transaction.save();

  res.json(transaction);
});

// Get books issued by a user
router.get('/user/:userId', async (req, res) => {
  const transactions = await Transaction.find({ userId: req.params.userId });
  res.json(transactions);
});

// Get total rent generated by a book
router.get('/rent/:bookName', async (req, res) => {
  const transactions = await Transaction.find({ bookName: req.params.bookName });
  const totalRent = transactions.reduce((sum, txn) => sum + txn.rent, 0);

  res.json({ totalRent });
});

module.exports = router;
